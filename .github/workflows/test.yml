name: test

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Test Hash
        run: |
          dotnet test ./tests/Hash.Core.Tests/ -- --coverage --coverage-output-format cobertura --coverage-output ${{ github.workspace }}/coverage.cobertura.xml

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: coverage.cobertura.xml
          fail_ci_if_error: true

      - name: Add Link to Step Summary
        run: |
          echo "### Codecov" >> $GITHUB_STEP_SUMMARY
          echo "https://codecov.io/gh/${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "##### Default Branch" >> $GITHUB_STEP_SUMMARY
          echo "![codecov](https://codecov.io/gh/${{ github.repository }}/graph/badge.svg?token=${{ secrets.CODECOV_GRAPH_TOKEN }})" >> $GITHUB_STEP_SUMMARY

      - name: ReportGenerator
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator -reports:coverage.cobertura.xml -targetdir:coverage-report

      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.cobertura.xml

      - name: Upload ReportGenerator Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage-report

  upload-pages:
    runs-on: ubuntu-latest
    environment:
      name: CloudflarePagesUpload
    needs: test

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: coverage-report

      - name: Upload Coverage to CF Pages
        id: upload-cf-pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy coverage-report --project-name=${{ vars.CLOUDFLARE_PROJECT_NAME }}

      - name: Add Link to Step Summary
        run: |
          echo "### ReportGenerator" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.upload-cf-pages.outputs.pages-deployment-alias-url || steps.upload-cf-pages.outputs.deployment-url }}" >> $GITHUB_STEP_SUMMARY
